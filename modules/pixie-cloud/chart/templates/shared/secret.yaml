{{- if not (lookup "v1" "Secret" .Release.Namespace "cloud-auth-secrets") }}
apiVersion: v1
data:
  jwt-signing-key: {{ include "secretValue" .Values.cloudAuthJwtSigningKey }}
kind: Secret
metadata:
  name: cloud-auth-secrets
type: Opaque
{{- end }}
---
{{- if not (lookup "v1" "Secret" .Release.Namespace "cloud-proxy-tls-certs") }}
apiVersion: v1
data:
  tls.crt: {{ include "secretValue" .Values.cloudProxy.tls.certificate }}
  tls.key: {{ include "secretValue" .Values.cloudProxy.tls.key }}
kind: Secret
metadata:
  name: cloud-proxy-tls-certs
type: kubernetes.io/tls
{{- end }}
---
{{- if not (lookup "v1" "Secret" .Release.Namespace "cloud-session-secrets") }}
apiVersion: v1
data:
  session-key: {{ include "secretValue" .Values.apiServer.cloudSessionKey }}
kind: Secret
metadata:
  name: cloud-session-secrets
type: Opaque
{{- end }}
---
{{- if not (lookup "v1" "Secret" .Release.Namespace "pl-db-secrets") }}
apiVersion: v1
data:
  replication-password: {{ include "secretValue" .Values.postgresql.auth.password }}
  postgres-password: {{ include "secretValue" .Values.postgresql.auth.password }}
  PL_POSTGRES_PASSWORD: {{ include "secretValue" .Values.postgresql.auth.password }}
  PL_POSTGRES_USERNAME: {{ include "secretValue" .Values.postgresql.auth.username }}
  database-key: {{ include "secretValue" .Values.postgresql.auth.databaseKey }}
kind: Secret
metadata:
  name: pl-db-secrets
type: Opaque
{{- end }}
---
{{- if not (lookup "v1" "Secret" .Release.Namespace "pl-hydra-secrets") }}
apiVersion: v1
data:
  CLIENT_SECRET: {{ include "secretValue" .Values.hydra.clientSecret }}
  OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT: {{ include "secretValue" .Values.hydra.pairwiseSalt }}
  SECRETS_SYSTEM: {{ include "secretValue" .Values.hydra.secretsSystem }}
kind: Secret
metadata:
  name: pl-hydra-secrets
type: Opaque
{{- end }}
---
{{- if not (lookup "v1" "Secret" .Release.Namespace "service-tls-certs") }}
apiVersion: v1
data:
  ca.crt: {{ include "secretValue" .Values.serviceTlsCerts.caCertificate }}
  client.crt: {{ include "secretValue" .Values.serviceTlsCerts.clientCertificate }}
  client.key: {{ include "secretValue" .Values.serviceTlsCerts.clientKey }}
  server.crt: {{ include "secretValue" .Values.serviceTlsCerts.serverCertificate }}
  server.key: {{ include "secretValue" .Values.serviceTlsCerts.serverKey }}
kind: Secret
metadata:
  name: service-tls-certs
type: Opaque
{{- end }}
---
{{- if not (lookup "v1" "Secret" .Release.Namespace "elastic-config-credentials") }}
apiVersion: v1
data:
  password: {{ include "secretValue" .Values.elasticsearch.elasticPassword }}
kind: Secret
metadata:
  name: elastic-config-credentials
type: Opaque
{{- end }}